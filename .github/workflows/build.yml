name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-17-jdk python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev
        sudo apt-get install -y build-essential libltdl-dev libffi-dev libssl-dev python3-dev
        
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 31
        build-tools: 31.0.0
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Cython==0.29.36
        pip install buildozer==1.5.0 
        pip install colorama appdirs sh jinja2
        
    - name: Cache Buildozer global directory
      uses: actions/cache@v3
      with:
        path: .buildozer_global
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}
        
    - name: Cache Buildozer directory
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: ${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
        
    - name: Build APK with Buildozer
      run: |
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        export ANDROID_HOME=$ANDROID_HOME
        export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
        buildozer android debug
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: YouTube-Downloader-Debug-APK
        path: bin/*.apk
        
    - name: Create Release
      if: github.ref == 'refs/heads/main'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: YouTube Downloader v${{ github.run_number }}
        body: |
          Descarga automática del APK de YouTube Downloader
          
          ## Características:
          - Descarga videos de YouTube en formato MP4
          - Descarga audio en formato MP3
          - Interfaz simple y fácil de usar
          - Soporte para Android 5.0+
          
          ## Instalación:
          1. Descarga el archivo APK
          2. Habilita "Orígenes desconocidos" en tu Android
          3. Instala el APK
          
          ## Permisos necesarios:
          - Almacenamiento (para guardar descargas)
          - Internet (para descargar videos)
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: bin/youtubedownloader-1.0-armeabi-v7a-debug.apk
        asset_name: YouTubeDownloader-v${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive
